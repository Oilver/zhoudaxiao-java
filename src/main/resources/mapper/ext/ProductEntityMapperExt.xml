<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yiseven.zhoudaxiao.mapper.ext.ProductEntityMapperExt">

    <select id="query" parameterType="java.lang.Integer" resultType="com.yiseven.zhoudaxiao.web.result.ProductResult">
        select
        p.id, p.`name`, p.categoryId, p.brandId, p.introduction, p.originalPrice, p.discountPrice, p.agentPrice,
        p.secondAgentPrice, p.priority, p.pageviews, p.`like`, p.totalSales, p.monthlySales, p.freight, p.stock,
        p.isNew, p.createBy, p.createTime, p.lastUpdateBy, p.lastUpdateTime, p.detail, c.name as categoryName
        from product p join category c on p.categoryId = c.id
        where p.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryProductList" resultType="com.yiseven.zhoudaxiao.web.result.ProductResult">
        select i.url as avatarUrl,p.id, p.`name`, p.categoryId, p.brandId, p.introduction, p.originalPrice,
        p.discountPrice,
        p.agentPrice,p.secondAgentPrice, p.priority, p.pageviews, p.`like`, p.totalSales, p.monthlySales,
        p.freight, p.stock,p.isNew, p.createBy, p.createTime, p.lastUpdateBy, p.lastUpdateTime,detail
        from product p left join image i on i.productId = p.id and i.isAvatar = 1
        <where>
            <if test="isNew != null">
                isNew = #{isNew}
            </if>
            <if test="categoryId != null">
                AND categoryId = #{categoryId}
            </if>
            <if test="productName != null">
                AND p.`name` like concat('%',#{productName},'%')
            </if>
        </where>
        <if test="orderBySortType != null">
            order by ${orderBySortType}
        </if>
    </select>

    <select id="checkIsExist" resultType="java.lang.Integer">
        select count(1) from product where `name` = #{name}
    </select>

    <update id="updateCategoryBatch">
        update product set categoryId = #{categoryId}
        where id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>